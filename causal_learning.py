# -*- coding: utf-8 -*-
"""causal-learning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AKxqtE9MNirpkKPQKiCSYVZLtf1XeaOk
"""

def accuracy_adj(truth, est):
  fp, fn, tp, tn = 0, 0, 0, 0
  for i in range(len(truth)):
    for j in range(len(truth)):
      est_val = (est[i][j] != 0)
      truth_val = (truth[i][j] != 0)
      if(est_val and truth_val):
        tp += 1
      elif (est_val and not truth_val):
        fp += 1
      elif (not est_val and truth_val):
        fn += 1
      else:
        tn += 1
  return {"precision": (tp/(tp+fp)), "recall": (tp/(tp+fn))}

#!unzip dummy-data.zip

import numpy as np
import networkx
import pandas
import scipy
import sklearn
import statsmodels
import pydot
import matplotlib.pyplot as mplt

#!pip install causal-learn

import sys
import time

sys.path.append("")
import unittest

from causallearn.search.ConstraintBased.PC import pc
from causallearn.utils.cit import chisq, fisherz, gsq, kci, mv_fisherz
from causallearn.search.ScoreBased import GES
from causallearn.utils import GraphUtils

from causallearn.graph.GraphClass import CausalGraph as cgrap

#df = pandas.read_csv("dummy-data/small_simulation/save/data/data.1.txt", sep="\t")

#data_path = "/content/dummy-data/small_simulation/save/data/data.1.txt"

def convert_tuple_list_to_array(my_list, num_nodes):
  result = np.zeros((num_nodes, num_nodes))
  for item in my_list:
    if(item[0] != item[1]):
      result[item[0]][item[1]] = 1
  return result

def pc_alg(data, num_nodes):
  cg = pc(data, 0.05, gsq, True, 0, -1)  # Run PC and obtain the estimated graph (CausalGraph object)
  cg.draw_pydot_graph()
  mplt.savefig("causal-graph.png")
  #return cg.find_adj().tolist()
  return convert_tuple_list_to_array(cg.find_adj(), num_nodes)

def ges_alg(data):

  result = GES.ges(data, score_func="local_score_BDeu")
  result_graph = networkx.from_numpy_matrix(result["G"].graph, 
                                          create_using=networkx.DiGraph)
  networkx.draw_networkx(result_graph, pos=networkx.circular_layout(result_graph))
  mplt.savefig("causal-graph.png")
  return result["G"].graph.tolist()

#print(data)


#print(result["G"].graph)

def main():
  data_path = sys.argv[1]

  with open(data_path) as f:
    ncols = len(f.readline().split('\t')) 
  print("NCOLS:\t", ncols) 
  #data = np.loadtxt(data_path, delimiter='\t', skiprows=1, usecols=range(1,ncols+1))

  data = np.loadtxt(data_path, skiprows=1)  # Import the file at data_path as data

  if(sys.argv[2].upper() == "GES"):
    result = ges_alg(data)
  elif(sys.argv[2].upper() == "PC"):
    result = pc_alg(data, ncols)
  else:
    print("ERROR: Invalid Causal Learning Algorithm")
    return
  if((len(sys.argv) > 3) and (sys.argv[3].upper() == "-EVAL")):
    gt = np.loadtxt(sys.argv[4])
    print("\n\n", gt, "\n\n", "\n\n\n\n")
    print(accuracy_adj(result, gt))

main()

#!git clone https://github.com/cmu-phil/causal-learn.git
#!python3 causal_learning.py /content/dummy-data/small_simulation/save/data/data.1.txt GES